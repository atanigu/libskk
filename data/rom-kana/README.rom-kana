Format of rom-kana files

Each file contains only one toplevel JSON object (i.e. a dictionary),
which may contain two kind of keys "include" and "define".  The value
associated with "include" is an array of parent rules, which will be
included before evaluating the rule defined with "define".  The value
associated with "define" is an object which binds some variables to
values.  Currently "rom-kana" and "property" are available.

The variable "rom-kana" is used to define romaji-to-kana conversion
rules.  The value is an object which maps a string to either an array
or null.

If the value is an array, a new mapping is defined.  In that case each
array consists of 2 to 4 elements.  The first two elements are
<carryover> and <hiragana>.  <carryover> is a string which will be
added to preedit after the transition (for example, when "bb" is
typed, "b" will be added to preedit).  <hiragana> is an output in
hiragana.  The rest of elements are <katakana> and <hankaku-katakana>,
which are optional output strings in katakana and hankaku-katakana.

If the value is null, existing mapping of the corresponding key is
removed from the parent rule.

The variable "property" is used to define arbitrary properties used
internally.

Example:

{
    "include": [
        "standard"
    ],
    "define": {
        "rom-kana": {
            "xka": ["", "か", "ヵ", "ｶ"],
            "b.": [ "", "ぶ" ],
	    "dha": null,
        },
        "property": {
            "start-henkan": ["C-@"],
        }
    },
}

This rule includes "standard" rule first, defines new mappings for
"xka" and "b.", and removes a mapping "dha" from the current rule.
Also sets "start-henkan" property to an array including "C-@".
